% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_delim_pod_sidebar.R
\name{sample_delim_sb_server}
\alias{sample_delim_sb_server}
\title{Presentation server-function for sample-delim module}
\usage{
sample_delim_sb_server(input, output, session)
}
\arguments{
\item{input}{\code{shiny::\link[shiny]{shinyServer}} input object}

\item{output}{\code{shiny::\link[shiny]{shinyServer}} output object}

\item{session}{\code{shiny::\link[shiny]{shinyServer}} session object}
}
\value{
\code{shiny::\link[shiny]{reactive}} that returns the
  character string read from the selected file
}
\description{
This is the server function for a
sidebar presentation of the sample-delim module.
}
\details{
The return value is a reactive that returns, as a character string,
the contents of the selected file.

All the notifications provided by the foundation server-function,
\code{\link{sample_delim_server}}, are passed along.
}
\examples{
library("shiny")
library("shinyjs")
library("shinypod")

# also available by running sp_shiny_example("upload_text") // not yet

ui <- shinyUI(
  fluidPage(
    useShinyjs(),
    titlePanel("Select delimited-text file"),
    sidebarLayout(
      sidebarPanel(
        sample_delim_sb_side("sample_delim")
      ),
      mainPanel(
        sample_delim_sb_main("sample_delim")
      )
    )
  )
)

server <- shinyServer(function(input, output, session) {

  # rct_text is a reactive that can be used elsewhere in a server function
  rct_text <- callModule(module = sample_delim_sb_server, id = "sample_delim")

})

\dontrun{
  shinyApp(ui = ui, server = server)
}

}
\seealso{
\code{\link{sample_delim_sb_side}}, \code{\link{sample_delim_sb_main}},
  \code{\link{sample_delim_server}}
}

