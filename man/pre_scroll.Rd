% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_html.R
\name{pre_scroll}
\alias{pre_scroll}
\alias{pre_scroll_vert}
\title{Creates HTML container for scrollable pre-formatted text}
\source{
\url{http://stackoverflow.com/questions/10374171/how-to-make-twitter-bootstraps-pre-blocks-scroll-horizontally}
}
\usage{
pre_scroll(...)

pre_scroll_vert(...)
}
\arguments{
\item{...}{expression used to fill the body of the containter}
}
\value{
\describe{
  \item{\code{pre_scroll}}{container with horizontal scroll-bars}
  \item{\code{pre_scroll_vert}}{container with vertical scroll-bars}
}
}
\description{
Used as the \code{container} argument in \code{shiny::\link[shiny]{htmlOutput}}.
These are containters for pre-formatted (verbatim) text.
}
\details{
These functions are useful to help build
\code{shiny::\link[shiny]{htmlOutput}} for the UI. To
gernerate the HTML in your server function, use
\code{\link{text_html}} or \code{\link{tibble_html}} within
\code{shiny::\link[shiny]{renderUI}}.
}
\examples{
library("shiny")
library("readr")

ui <- shinyUI(

  fluidPage(
    sidebarLayout(
      sidebarPanel(),
      mainPanel(
        htmlOutput(outputId = "text_preview", container = pre_scroll)
      )
    )
  )
)

server <- shinyServer(function(input, output){

  output$text_preview <-
    renderUI(
      system.file("extdata", "wx_ames.csv", package = "shinypod") \%>\%
      read_file() \%>\%
      text_html()
    )

})

\dontrun{
shinyApp(ui = ui, server = server)
}
}
\seealso{
\code{\link{text_html}}, \code{\link{tibble_html}}
}

